# What's the difference between push, pull, and fetch?

| Command   | Description                                                                               | For more information see                  |
|-----------|-------------------------------------------------------------------------------------------|----------------------------------------|
| git-pull  | Uploads your local branch commits to the corresponding remote branch.                     | https://github.com/git-guides/git-pull |
| git-push  | Updates your current local working branch with any changes that are on the remote branch. | https://github.com/git-guides/git-push |
| git-fetch | Downloads the data from one or more repositories without integrating it into your working files. Use fetch to see what's changed in a remote repo without making any changes to your files. | https://git-scm.com/docs/git-fetch     |


### What's the difference between git-push and git-pull?

`git push` checks your current branch to see whether there's a tracking branch for a remote repository connected to it, and pushes the changes from your branch to the remote branch. This is how code is shared with a remote repository. You can think of it as "make the remote branch resemble my local branch". 

`git pull` checks the remote branch for changes and merges them with your local current branch.



This will fail if the remote branch has diverged from your local branch: if not all the commits in the remote branch are in your local branch. When this happens, your local branch needs to be synchronized with the remote branch with git pull or git fetch and git merge.`git fetch` again takes our current branch, and checks to see if there is a tracking branch. If so, it looks for changes in the remote branch, and pulls them into the tracking branch. It does not change your local branch. To do that, you'll need to do `git merge origin/master` (for the "master" branch) to merge those changes into your branch - probably also called "master".`git pull` simply does a `git fetch` followed immediately by `git merge`. This is often what we desire to do, but some people prefer to use git fetch followed by git merge to make sure they understand the changes they are merging into their branch before the merge happens.
